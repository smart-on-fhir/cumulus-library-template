# 'study_prefix' should be a string at the start of each table. We'll use this
# to clean up queries, so it should be unique. Name your tables in the following
# format: [study_prefix]__[table_name]. It should probably, but not necessarily,
# be the same name as the folder the study definition is in.
study_prefix = "template"

# The following section describes all tables that should be generated directly
# from SQL files.
[sql_config]
# 'file_names' defines a list of sql files to execute, in order, in this folder.
# Recommended order: Any ancillary config (like a list of condition codes),
# tables/view selecting subsets of data from FHIR data, tables/views creating 
# summary statistics.

# There are two special tables you can create that will be handled separately:
#
# [studyname]__meta_date - this will track the total range of data available
# from a specific site
# [studyname]__meta_version - this will allow you to specify a version of the
# data output schema, that can be incremented if you need to change it for any
# reason.
#
# For examples of usage, refer to the US core tables created by the library.
file_names = [
    "setup.sql",
    "lab_observations.sql",
    "counts.sql",
    "date_range.sql"
]


# The following section defines parameters related to exporting study data from
# your athena database
[export_config]
# The following tables will be output to disk when an export is run. In most cases,
# only count tables should be output in this way.
export_list = [
    "template__count_influenza_test_month",
]


# For most use cases, this should not be required, but if you need to run Python code to
# dynamically build tables, you can add a Python file that extends the TableBuilder class
# inside cumulus_library. The core study provides an example of this. Table builders 
# will always be run before any SQL queries are executed. 

# [table_builder_config]
# file_names = [
#     "my_builder.py",
# ]

